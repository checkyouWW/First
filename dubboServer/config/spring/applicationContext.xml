<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="  
    http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
    http://www.springframework.org/schema/tx   
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd   
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/jee
    http://www.springframework.org/schema/jee/spring-jee.xsd
    http://www.springframework.org/schema/context   
    http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- 引入属性配置文件 -->
	<context:property-placeholder location="classpath:spring/params.properties,classpath:redis.properties" />
	
	<context:annotation-config/>
	
	<!-- 引入dubbo provider配置文件 -->
	<import resource="classpath:dubbo/provider.xml"/>

	<!--使用JNDI。见/config/tomcat/dubboServer.xml里的数据源配置。 -->
	<jee:jndi-lookup id="default_datasource" jndi-name="${DEFAULT_JNDI}" />
	
	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="default_datasource" />
	</bean>
	
	<!-- jdbc事务配置方式  -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
	    <tx:attributes>
	       <tx:method name="*" rollback-for="Exception"/>
	    </tx:attributes>
	 </tx:advice>
	 
	<!--  事务在任意方法中起作用 -->
	<aop:config>
		<aop:pointcut id="txOperation"  expression="@annotation(org.springframework.transaction.annotation.Transactional)" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txOperation"/>
	</aop:config>
	
	
	<!-- 配置BDP数据源 -->
	<jee:jndi-lookup id="bdp_datasource" jndi-name="${BDP_JNDI}" />
	<bean id="dbpTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="bdp_datasource" />
	</bean>
	<tx:advice id="dbpTxAdvice" transaction-manager="dbpTransactionManager">
	    <tx:attributes>
	       <tx:method name="*" rollback-for="Exception" read-only="true"/>
	    </tx:attributes>
	 </tx:advice>
	 <aop:config>
		<aop:pointcut id="dbpTxOperation"  expression="@annotation(org.springframework.transaction.annotation.Transactional)" />
		<aop:advisor advice-ref="dbpTxAdvice" pointcut-ref="dbpTxOperation"/>
	</aop:config>
	 
	
	
	<!-- 配置aspect -->
	<bean id="contextAspect" class="spring.aspect.ContextAspect" />
	<bean id="contextXAAspect" class="spring.aspect.ContextXAAspect" />
	
	<!-- jdbcTemplate --> 
	<bean id="jdbcTemplate" class="spring.simple.MyJdbcTemplate">
		<property name="dataSource">
			<ref local="default_datasource" />
		</property>
	</bean>
	
	<!-- simpleJdbcTemplate  -->
    <bean id="dataSource_named_template" class="spring.simple.MyNamedParameterJdbcTemplate">
        <constructor-arg>
            <ref bean="jdbcTemplate" />
        </constructor-arg>
    </bean>
	<bean id="dataSource_template" class="spring.simple.MySimpleJdbcTemplate">
		<constructor-arg>
			<ref bean="dataSource_named_template" />
		</constructor-arg>
	</bean>
	
	<bean id="SpringContextUtil" class="spring.util.SpringContextUtil" lazy-init="false"/>

	<!-- 启用aop -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
	<!-- 自动扫描注解 -->
	<context:component-scan base-package="com.ztesoft" >
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- 系统初始化处理类 -->
    <bean id="initServlet" class="com.ztesoft.common.listener.InitServlet"/>
    
</beans>  